{"version":3,"sources":["Entry.js","Filter.js","StatsPanel.js","Timer.js","QuotesPanel.js","OptionsPanel.js","MainPanel.js","App.js","serviceWorker.js","index.js"],"names":["Entry","props","state","ms","hours","Math","floor","minutes","seconds","b","Card","bg","this","fast","wasSuccessful","Body","Text","dateMade","formatTime","timePassed","isSuccess","Component","Filter","handleSelectChange","filterSelect","document","getElementById","value","setState","filterBy","margin-right","id","onChange","StatsPanel","calcSuccess","percentSucc","pastFasts","length","successes","i","round","filterCat","isFiltering","starvs","map","key","index","toString","className","Timer","dispTime","setInterval","isRunning","prevTime","displayTime","newTime","setDisplayTime","parseInt","endTime","Date","now","durationText","Moment","fromNow","toggleRunning","saveFast","fastLength","QuotesPanel","randomQuote","random","activeQuote","quoteList","split","OptionsPanel","handleOptionChange","changeEvent","selectedRadio","target","setFastLength","handleCustomTime","val","min","max","handleStartStop","bind","Button","onClick","disabled","variant","type","name","checked","placeholder","MainPanel","new_length","new_time","App","intDisp","diff","instanceFast","format","prevState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.99bfa126.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nexport default class Entry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    formatTime(ms) {\r\n        var hours = Math.floor((ms % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        var minutes = Math.floor((ms % (1000 * 60 * 60)) / (1000 * 60));\r\n        var seconds = Math.floor((ms % (1000 * 60)) / 1000);\r\n\r\n        if (minutes < 10) {\r\n            minutes = \"0\" + minutes;\r\n        }\r\n        if (seconds < 10) {\r\n            seconds = \"0\" + seconds;\r\n        }\r\n        if (hours < 10) {\r\n            hours = \"0\" + hours;\r\n        }\r\n        return hours + \":\" + minutes + \":\" + seconds\r\n    }\r\n\r\n    isSuccess(b) {\r\n        if (b === true) {\r\n            return \"Yes\"\r\n        }\r\n        else {\r\n            return \"No\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // <div className=\"Entry\">\r\n                <div>\r\n                    <Card bg={this.props.fast.wasSuccessful ? \"success\" : \"danger\"}>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                Date Completed: {this.props.fast.dateMade} <br />\r\n                                Duration: {this.formatTime(this.props.fast.timePassed)} <br />\r\n                                Success: {this.isSuccess(this.props.fast.wasSuccessful)}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            // </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Filter extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            filterBy: \"none\"\r\n        }\r\n    }\r\n\r\n    handleSelectChange = () => {\r\n        let filterSelect = document.getElementById(\"filterBy\").value;\r\n        this.setState({\r\n            filterBy: filterSelect\r\n        })\r\n        this.props.handleSelectChange( this.state.filterBy )\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <label margin-right=\"5px\">Sort by </label>\r\n                <select id=\"filterBy\" onChange={this.handleSelectChange}>\r\n                    <option value=\"none\">None</option>\r\n                    <option value=\"fastingTime\">Fasting Time</option>\r\n                    <option value=\"wasSuccessful\">Successful Attempts</option>\r\n                </select>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport Entry from './Entry.js';\r\nimport Filter from './Filter.js';\r\n\r\nexport default class StatsPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isFiltering: false,\r\n            filterBy: \"none\"\r\n        }\r\n    }\r\n\r\n    calcSuccess = () => {\r\n        let percentSucc;\r\n        if (this.props.pastFasts.length !== 0) {\r\n            let successes = 0;\r\n            for (let i = 0; i < this.props.pastFasts.length; i++) {\r\n                let fastInst = this.props.pastFasts[i];\r\n                let wasSucc = fastInst.wasSuccessful;\r\n                if (wasSucc) {\r\n                    successes++;\r\n                }\r\n            }\r\n            percentSucc = Math.round(successes / this.props.pastFasts.length * 100);\r\n        } else {\r\n            percentSucc = \"\";\r\n        }\r\n        return percentSucc;\r\n    }\r\n\r\n    handleSelectChange = (filterCat) => {\r\n        if ( filterCat !== \"none\" ){\r\n            this.setState({\r\n                isFiltering: true,\r\n                filterBy: filterCat\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                isFiltering: false,\r\n                filterBy: filterCat\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        var starvs = this.props.pastFasts.map(fast => {\r\n            return (\r\n                <Entry key={fast.index.toString()} index={fast.index} fast={fast}> </Entry>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"StatsPanel\">\r\n                <h3>STARV History</h3>\r\n                <div>\r\n                    <strong>Success rate: {(this.props.pastFasts.length === 0) ? \"\" : this.calcSuccess()}% </strong>\r\n                </div>\r\n\r\n                <div>\r\n                    {starvs}\r\n                </div>\r\n\r\n                <div>\r\n                    <Filter pastFasts={this.props.pastFasts}/>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport Moment from 'moment';\r\n\r\nexport default class Timer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // startTime: null, //start time null            \r\n            endTime: null,\r\n            durationText: \"\",\r\n    };\r\n}\r\n\r\n    dispTime = setInterval(() => {\r\n        if (this.props.isRunning) {\r\n            let prevTime = this.props.displayTime;  // if displayTime is ms differece\r\n            let newTime = prevTime - 1000;\r\n            if (prevTime > 0) {\r\n                this.props.setDisplayTime(parseInt(newTime))\r\n            } \r\n            else {\r\n                this.setState({\r\n                    endTime: Date.now(),\r\n                    durationText: Moment(this.state.endTime).fromNow()\r\n                })\r\n                this.props.toggleRunning();\r\n                this.props.saveFast(this.props.fastLength, this.props.displayTime);\r\n            }\r\n        } \r\n    }, 1000);\r\n\r\n    formatTime(ms) {\r\n        var hours = Math.floor((ms % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        var minutes = Math.floor((ms % (1000 * 60 * 60)) / (1000 * 60));\r\n        var seconds = Math.floor((ms % (1000 * 60)) / 1000);\r\n\r\n        if (minutes < 10) {\r\n            minutes = \"0\" + minutes;\r\n        }\r\n        if (seconds < 10) {\r\n            seconds = \"0\" + seconds;\r\n        }\r\n        if (hours < 10) {\r\n            hours = \"0\" + hours;\r\n        }\r\n\r\n        return hours + \":\" + minutes + \":\" + seconds\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n    timePassed = setInterval(() => {\r\n        this.setState({\r\n            durationText: Moment(this.state.endTime).fromNow()\r\n        }) \r\n    }, 1000*60)\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Timer\">\r\n                <h1>\r\n                    {this.props.isRunning ? this.formatTime(this.props.displayTime) : \"00:00:00\"}\r\n                </h1>\r\n            </div >\r\n                \r\n        );\r\n    }\r\n}   ","import React, {Component} from \"react\";\r\n\r\nimport { random } from \"mathjs\"\r\n\r\n\r\n\r\n\r\nexport default class QuotesPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeQuote: quoteList[Math.round(random()* 102)]\r\n        }\r\n    }\r\n\r\n    randomQuote = setInterval(() => {\r\n        let i = Math.round(random() * 102)\r\n        this.setState({activeQuote: quoteList[i]})\r\n    }, 1000*5*60)\r\n\r\n    render() {\r\n        return <div className=\"Quotes\">\r\n            {this.state.activeQuote}\r\n        </div>\r\n    }\r\n}\r\n\r\nlet quoteList = `Life is about making an impact, not making an income. -Kevin Kruse\r\nWhatever the mind of man can conceive and believe, it can achieve. -Napoleon Hill\r\nStrive not to be a success, but rather to be of value. -Albert Einstein\r\nTwo roads diverged in a wood, and I—I took the one less traveled by, And that has made all the difference.  -Robert Frost\r\nI attribute my success to this: I never gave or took any excuse. -Florence Nightingale\r\nYou miss 100% of the shots you don’t take. -Wayne Gretzky\r\nI've missed more than 9000 shots in my career. I've lost almost 300 games. 26 times I've been trusted to take the game winning shot and missed. I've failed over and over and over again in my life. And that is why I succeed. -Michael Jordan\r\nThe most difficult thing is the decision to act, the rest is merely tenacity. -Amelia Earhart\r\nEvery strike brings me closer to the next home run. -Babe Ruth\r\nDefiniteness of purpose is the starting point of all achievement. -W. Clement Stone\r\nLife isn't about getting and having, it's about giving and being. -Kevin Kruse\r\nLife is what happens to you while you’re busy making other plans. -John Lennon\r\nWe become what we think about. -Earl Nightingale\r\nTwenty years from now you will be more disappointed by the things that you didn’t do than by the ones you did do, so throw off the bowlines, sail away from safe harbor, catch the trade winds in your sails.  Explore, Dream, Discover. -Mark Twain\r\nLife is 10% what happens to me and 90% of how I react to it. -Charles Swindoll\r\nThe most common way people give up their power is by thinking they don’t have any. -Alice Walker\r\nThe mind is everything. What you think you become.  -Buddha\r\nThe best time to plant a tree was 20 years ago. The second best time is now. -Chinese Proverb\r\nAn unexamined life is not worth living. -Socrates\r\nEighty percent of success is showing up. -Woody Allen\r\nYour time is limited, so don’t waste it living someone else’s life. -Steve Jobs\r\nWinning isn’t everything, but wanting to win is. -Vince Lombardi\r\nI am not a product of my circumstances. I am a product of my decisions. -Stephen Covey\r\nEvery child is an artist.  The problem is how to remain an artist once he grows up. -Pablo Picasso\r\nYou can never cross the ocean until you have the courage to lose sight of the shore. -Christopher Columbus\r\nI’ve learned that people will forget what you said, people will forget what you did, but people will never forget how you made them feel. -Maya Angelou\r\nEither you run the day, or the day runs you. -Jim Rohn\r\nWhether you think you can or you think you can’t, you’re right. -Henry Ford\r\nThe two most important days in your life are the day you are born and the day you find out why. -Mark Twain\r\nWhatever you can do, or dream you can, begin it.  Boldness has genius, power and magic in it. -Johann Wolfgang von Goethe\r\nThe best revenge is massive success. -Frank Sinatra\r\nPeople often say that motivation doesn’t last. Well, neither does bathing.  That’s why we recommend it daily. -Zig Ziglar\r\nLife shrinks or expands in proportion to one's courage. -Anais Nin\r\nIf you hear a voice within you say “you cannot paint,” then by all means paint and that voice will be silenced. -Vincent Van Gogh\r\nThere is only one way to avoid criticism: do nothing, say nothing, and be nothing. -Aristotle\r\nAsk and it will be given to you; search, and you will find; knock and the door will be opened for you. -Jesus\r\nThe only person you are destined to become is the person you decide to be. -Ralph Waldo Emerson\r\nGo confidently in the direction of your dreams.  Live the life you have imagined. -Henry David Thoreau\r\nWhen I stand before God at the end of my life, I would hope that I would not have a single bit of talent left and could say, I used everything you gave me. -Erma Bombeck\r\nFew things can help an individual more than to place responsibility on him, and to let him know that you trust him.  -Booker T. Washington\r\nCertain things catch your eye, but pursue only those that capture the heart. - Ancient Indian Proverb\r\nBelieve you can and you’re halfway there. -Theodore Roosevelt\r\nEverything you’ve ever wanted is on the other side of fear. -George Addair\r\nWe can easily forgive a child who is afraid of the dark; the real tragedy of life is when men are afraid of the light. -Plato\r\nTeach thy tongue to say, \"I do not know,\" and thous shalt progress. -Maimonides\r\nStart where you are. Use what you have.  Do what you can. -Arthur Ashe\r\nWhen I was 5 years old, my mother always told me that happiness was the key to life.  When I went to school, they asked me what I wanted to be when I grew up.  I wrote down ‘happy’.  They told me I didn’t understand the assignment, and I told them they didn’t understand life. -John Lennon\r\nFall seven times and stand up eight. -Japanese Proverb\r\nWhen one door of happiness closes, another opens, but often we look so long at the closed door that we do not see the one that has been opened for us. -Helen Keller\r\nEverything has beauty, but not everyone can see. -Confucius\r\nHow wonderful it is that nobody need wait a single moment before starting to improve the world. -Anne Frank\r\nWhen I let go of what I am, I become what I might be. -Lao Tzu\r\nLife is not measured by the number of breaths we take, but by the moments that take our breath away. -Maya Angelou\r\nHappiness is not something readymade.  It comes from your own actions. -Dalai Lama\r\nIf you're offered a seat on a rocket ship, don't ask what seat! Just get on. -Sheryl Sandberg\r\nFirst, have a definite, clear practical ideal; a goal, an objective. Second, have the necessary means to achieve your ends; wisdom, money, materials, and methods. Third, adjust all your means to that end. -Aristotle\r\nIf the wind will not serve, take to the oars. -Latin Proverb\r\nYou can’t fall if you don’t climb.  But there’s no joy in living your whole life on the ground. -Unknown\r\nWe must believe that we are gifted for something, and that this thing, at whatever cost, must be attained. -Marie Curie\r\nToo many of us are not living our dreams because we are living our fears. -Les Brown\r\nChallenges are what make life interesting and overcoming them is what makes life meaningful. -Joshua J. Marine\r\nIf you want to lift yourself up, lift up someone else. -Booker T. Washington\r\nI have been impressed with the urgency of doing. Knowing is not enough; we must apply. Being willing is not enough; we must do. -Leonardo da Vinci\r\nLimitations live only in our minds.  But if we use our imaginations, our possibilities become limitless. -Jamie Paolinetti\r\nYou take your life in your own hands, and what happens? A terrible thing, no one to blame. -Erica Jong\r\nWhat’s money? A man is a success if he gets up in the morning and goes to bed at night and in between does what he wants to do. -Bob Dylan\r\nI didn’t fail the test. I just found 100 ways to do it wrong. -Benjamin Franklin\r\nIn order to succeed, your desire for success should be greater than your fear of failure. -Bill Cosby\r\nA person who never made a mistake never tried anything new. - Albert Einstein\r\nThe person who says it cannot be done should not interrupt the person who is doing it. -Chinese Proverb\r\nThere are no traffic jams along the extra mile. -Roger Staubach\r\nIt is never too late to be what you might have been. -George Eliot\r\nYou become what you believe. -Oprah Winfrey\r\nI would rather die of passion than of boredom. -Vincent van Gogh\r\nA truly rich man is one whose children run into his arms when his hands are empty. -Unknown\r\nIt is not what you do for your children, but what you have taught them to do for themselves, that will make them successful human beings.  -Ann Landers\r\nIf you want your children to turn out well, spend twice as much time with them, and half as much money. -Abigail Van Buren\r\nBuild your own dreams, or someone else will hire you to build theirs. -Farrah Gray\r\nThe battles that count aren't the ones for gold medals. The struggles within yourself--the invisible battles inside all of us--that's where it's at. -Jesse Owens\r\nEducation costs money.  But then so does ignorance. -Sir Claus Moser\r\nI have learned over the years that when one's mind is made up, this diminishes fear. -Rosa Parks\r\nIt does not matter how slowly you go as long as you do not stop. -Confucius\r\nIf you look at what you have in life, you'll always have more. If you look at what you don't have in life, you'll never have enough. -Oprah Winfrey\r\nRemember that not getting what you want is sometimes a wonderful stroke of luck. -Dalai Lama\r\nYou can’t use up creativity.  The more you use, the more you have. -Maya Angelou\r\nDream big and dare to fail. -Norman Vaughan\r\nOur lives begin to end the day we become silent about things that matter. -Martin Luther King Jr.\r\nDo what you can, where you are, with what you have. -Teddy Roosevelt\r\nIf you do what you’ve always done, you’ll get what you’ve always gotten. -Tony Robbins\r\nDreaming, after all, is a form of planning. -Gloria Steinem\r\nIt's your place in the world; it's your life. Go on and do all you can with it, and make it the life you want to live. -Mae Jemison\r\nYou may be disappointed if you fail, but you are doomed if you don't try. -Beverly Sills\r\nRemember no one can make you feel inferior without your consent. -Eleanor Roosevelt\r\nLife is what we make it, always has been, always will be. -Grandma Moses\r\nThe question isn’t who is going to let me; it’s who is going to stop me. -Ayn Rand\r\nWhen everything seems to be going against you, remember that the airplane takes off against the wind, not with it. -Henry Ford\r\nIt’s not the years in your life that count. It’s the life in your years. -Abraham Lincoln\r\nChange your thoughts and you change your world. -Norman Vincent Peale\r\nEither write something worth reading or do something worth writing. -Benjamin Franklin\r\nNothing is impossible, the word itself says, “I’m possible!” -Audrey Hepburn\r\nThe only way to do great work is to love what you do. -Steve Jobs\r\nIf you can dream it, you can achieve it. -Zig Ziglar`.split(\"\\n\");\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default class OptionsPanel extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selectedRadio: \"Radio1\",\r\n        }\r\n\r\n        this.handleStartStop = this.handleStartStop.bind(this);\r\n        this.handleOptionChange = this.handleOptionChange.bind(this);\r\n        this.handleCustomTime = this.handleCustomTime.bind(this);\r\n    }\r\n\r\n    handleOptionChange = changeEvent => {\r\n        this.setState({\r\n            selectedRadio: changeEvent.target.id\r\n        });\r\n\r\n        let nowState = changeEvent.target.id;\r\n        if (nowState !== \"Radio3\") {\r\n            this.props.setFastLength(parseInt(changeEvent.target.value));\r\n        }\r\n    };\r\n\r\n    handleCustomTime = changeEvent => {\r\n        let val = parseInt(changeEvent.target.value)\r\n        if (changeEvent.target.min >= val && changeEvent.target.max <= val) {\r\n            this.props.setFastLength(parseInt(val))\r\n        }\r\n    }\r\n\r\n    handleStartStop = () => {\r\n        if (this.props.isRunning) {\r\n            this.setState({\r\n                endTime: Date.now(),\r\n            })\r\n            this.props.toggleRunning();\r\n            this.props.saveFast(this.props.fastLength, this.props.displayTime);\r\n            \r\n        } else {\r\n            // this.setState({startTime: Date.now()})\r\n            this.props.setDisplayTime(this.props.fastLength * 60 * 60 * 1000);\r\n            this.props.toggleRunning();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div id=\"OptionsPanel\">\r\n            <Button onClick={this.handleStartStop} disabled={this.props.isRunning}>Start</Button>\r\n            <Button variant=\"danger\" onClick={this.handleStartStop} disabled={!this.props.isRunning}>Stop</Button>\r\n            {/* <button onClick={this.handleStart}>hi</button> */}\r\n\r\n            <div className=\"form-check\">\r\n                <input type=\"radio\" name=\"Radios\" id=\"Radio1\" value={16}\r\n                    checked={this.state.selectedRadio === \"Radio1\"} onClick={this.handleOptionChange}\r\n                    disabled={this.props.isRunning} />\r\n                <label className=\"form-check-label\">\r\n                    16:8\r\n                    </label>\r\n            </div>\r\n            <div className=\"form-check\">\r\n                <input type=\"radio\" name=\"Radios\" id=\"Radio2\" value={18}\r\n                    checked={this.state.selectedRadio === \"Radio2\"} onClick={this.handleOptionChange}\r\n                    disabled={this.props.isRunning} />\r\n                <label className=\"form-check-label\">\r\n                    18:6\r\n                    </label>\r\n            </div>\r\n            <div className=\"form-check\">\r\n                <input type=\"radio\" name=\"Radios\" id=\"Radio3\" value=\"option3\"\r\n                    checked={this.state.selectedRadio === \"Radio3\"} onClick={this.handleOptionChange}\r\n                    disabled={this.props.isRunning} />\r\n                <label className=\"form-check-label\">\r\n                    Custom\r\n                    </label>\r\n                <input type=\"number\" id=\"quantity\" name=\"quantity\" min=\"5\" max=\"23\" placeholder=\"16\"\r\n                    disabled={this.state.selectedRadio !== \"Radio3\"} onChange={this.handleCustomTime} />\r\n                <br />\r\n                <label>\r\n                    Choose intended fasting hours between 5 and 23, inclusive.\r\n                    </label>\r\n\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Timer from './Timer';\r\nimport QuotesPanel from \"./QuotesPanel\"\r\nimport OptionsPanel from \"./OptionsPanel\"\r\nexport default class MainPanel extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isRunning: false, //tells whether timer is started\r\n            fastLength: 1 / 60 / 30, // length of fast in hours\r\n            displayTime: 0,  // time to display on timer; ms left to count down\r\n        }\r\n\r\n        this.toggleRunning = this.toggleRunning.bind(this)\r\n        this.setFastLength = this.setFastLength.bind(this)\r\n        this.setDisplayTime = this.setDisplayTime.bind(this);\r\n    }\r\n\r\n    toggleRunning() {\r\n        this.setState({ isRunning: (!this.state.isRunning) })\r\n    }\r\n\r\n    setFastLength(new_length) {\r\n        this.setState({ fastLength: new_length })\r\n    }\r\n\r\n    setDisplayTime(new_time) {\r\n        this.setState({ displayTime: parseInt(new_time) })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"MainPanel\">\r\n                <h1>STARV</h1>\r\n                <p>\r\n                    Superb Timer for Achieving Resolutions Victoriously:\r\n                <br />\r\n                    <i>A dieting solution for the 21st century</i></p>\r\n                <Timer\r\n                    saveFast={this.props.saveFast}\r\n                    isRunning={this.state.isRunning}\r\n                    fastLength={this.state.fastLength}\r\n                    toggleRunning={this.toggleRunning}\r\n                    setDisplayTime={this.setDisplayTime}\r\n                    displayTime={this.state.displayTime} />\r\n                <OptionsPanel\r\n                    fastLength={this.state.fastLength}\r\n                    displayTime={this.state.displayTime}\r\n                    toggleRunning={this.toggleRunning}\r\n                    setFastLength={this.setFastLength}\r\n                    isRunning={this.state.isRunning}\r\n                    saveFast={this.props.saveFast}\r\n                    setDisplayTime={this.setDisplayTime} />\r\n                <QuotesPanel />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport StatsPanel from \"./StatsPanel.js\"\r\nimport MainPanel from \"./MainPanel.js\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Moment from 'moment';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pastFasts: []\r\n    }\r\n  }\r\n\r\n  saveFast = (length, displayTime) => {\r\n    let intDisp = parseInt(displayTime);\r\n\r\n    let diff = (length * 60 * 60 * 1000) - intDisp;\r\n\r\n    let instanceFast = {\r\n      dateMade: Moment().format(\"MMM DD, YYYY\"),\r\n      wasSuccessful: intDisp === 0, //if not successful, then it is false that diff === 0\r\n      timePassed: diff,\r\n      index: this.state.pastFasts.length\r\n    };\r\n\r\n    this.setState(prevState => {\r\n      return ({\r\n        pastFasts: [...prevState.pastFasts, instanceFast]\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"StatsPanel\">\r\n          <StatsPanel pastFasts={this.state.pastFasts} />\r\n        </div>\r\n        <div className=\"MainPanel\">\r\n          <MainPanel saveFast={this.saveFast} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}